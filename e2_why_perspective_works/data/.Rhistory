#Julian De Freitas, 2019
#Analysis script for De Freitas, Rips, & Alvarez - The limit of personal identity
#Experiment 3
## clear workspace
rm(list = ls())
## necessary libraries
if (!require(rjson)) {install.packages("rjson"); require(rjson)}
if (!require(ggplot2)) {install.packages("ggplot2"); require(ggplot2)}
if (!require(ltm)) {install.packages("ltm"); require(ltm)}
if (!require(heplots)) {install.packages("heplots"); require(heplots)}
if (!require(lmtest)) {install.packages("lmtest"); require(lmtest)}
if (!require(compute.es)) {install.packages("compute.es"); require(compute.es)}
if (!require(lsr)) {install.packages("lsr"); require(lsr)}
if (!require(lsmeans)) {install.packages("lsmean"); require(lsmeans)}
if (!require(nnet)) {install.packages("nnet"); require(nnet)}
if (!require(mlogit)) {install.packages("mlogit"); require(mlogit)}
##================ import baseline condition from e1 ===================================================================================
dir <- setwd("/Users/julian/Documents/github/juliandefreitas/serial_self/e1_original_or_copy/data")
files <- list.files(pattern=('*txt'))
myJSON <- lapply(files, function(x) fromJSON(file=x)) #join into one single JSON file
(data1 <- lapply(myJSON, function(myJSON) { as.data.frame(myJSON) }))
data1 <- (data1 <- do.call(rbind, data1))
dim(data1) #400
data1 <-subset(data1, data1$trialStruct.cond_num == 3)
data1$trialStruct.cond_num <- 1
data1 <- subset(data1, data1$trialStruct.attention == 0 &
data1$trialStruct.comp_original_you == 2 & data1$trialStruct.comp_number_copies == 2)
dim(data1)
##================ import data from E3 ================================================================================================
dir <- setwd("/Users/julian/Documents/github/juliandefreitas/serial_self/e3_why_perspective_works/data")
files <- list.files(pattern=('*txt'))
myJSON <- lapply(files, function(x) fromJSON(file=x)) #join into one single JSON file
(data2 <- lapply(myJSON, function(myJSON) { as.data.frame(myJSON) }))
data2 <- (data2 <- do.call(rbind, data2))
dim(data2) #301
data2$trialStruct.cond_num <- data2$trialStruct.cond_num + 1
#exclude those who failed attention and comprehension checks
data2 <- subset(data2, data2$trialStruct.attention == 0 &
data2$trialStruct.comp_original_you == 2 & data2$trialStruct.comp_number_copies == 2)
dim(data2)
age <- as.numeric(data2$trialStruct.age); mean(age,na.rm = TRUE)
gender <- as.factor(data2$trialStruct.sex); table(gender)[2]/sum(table(gender))
#combine data1 and data2
data <- rbind(data1, data2)
dim(data)
table(data$trialStruct.cond_num)
##======================== prep data for analysis ================================================================================
#code condition names and
#code choices for logistic regressions ('b' = binary)
for(i in 1:dim(data)[1]) {
if(data$trialStruct.identity[i] == 1) {
data$identity_name[i] = '1_original'
data$two_or_one[i] = 'one'
#original = 1, everything else zero
data$identity_b_original[i] = 1
data$identity_b_copy[i] = 0
data$identity_b_neither[i] = 0
data$identity_b_both[i] = 0
}
else if(data$trialStruct.identity[i] == 2) {
data$identity_name[i] = '2_copy'
data$two_or_one[i] = 'one'
#copy = 1, everything else zero
data$identity_b_original[i] = 0
data$identity_b_copy[i] = 1
data$identity_b_neither[i] = 0
data$identity_b_both[i] = 0
}
else if(data$trialStruct.identity[i] == 3) {
data$identity_name[i] = '3_neither'
data$two_or_one[i] = 'neither'
data$identity_b_original[i] = 0
data$identity_b_copy[i] = 0
data$identity_b_neither[i] = 1
data$identity_b_both[i] = 0
}
else if(data$trialStruct.identity[i] == 4) {
data$identity_name[i] = '4_both'
data$two_or_one[i] = 'two'
data$identity_b_original[i] = 0
data$identity_b_copy[i] = 0
data$identity_b_neither[i] = 0
data$identity_b_both[i] = 1
}
}
data$identity_name <- as.factor(data$identity_name)
data$two_or_one <- as.factor(data$two_or_one)
##========================================== assign variable names ======================================================
persp <- as.factor(data$trialStruct.perspective_cond)
cond <- as.factor(data$trialStruct.cond_num)
identity <- as.numeric(data$trialStruct.identity)
b_identity <- as.numeric(data$identity_binary) #binary identity
moral <- as.numeric(data$trialStruct.moral)
edu_science <- as.numeric(data$trialStruct.edu_science)
edu_phil <- as.numeric(data$trialStruct.edu_phil)
identity_b_original <- as.numeric(data$identity_b_original)
identity_b_copy <- as.numeric(data$identity_b_copy)
identity_b_neither <- as.numeric(data$identity_b_neither)
identity_b_both <- as.numeric(data$identity_b_both)
data$persp <- persp
#code perspective condition as continuous variable
for(i in 1:length(persp)) {
if(persp[i] == 'third') {
data$persp_num[i] = 1
}
else if(persp[i] == 'empathy') {
data$persp_num[i] = 2
}
else if(persp[i] == 'self') {
data$persp_num[i] = 3
}
else if(persp[i] == 'full') {
data$persp_num[i] = 4
}
}
persp_num <- as.factor(data$persp_num)
data$persp_num <- persp_num
#export data for multinomial logistic regression
data_export <- data[,c(29:36)]
write.csv(data_export, 'data_e3.csv')
